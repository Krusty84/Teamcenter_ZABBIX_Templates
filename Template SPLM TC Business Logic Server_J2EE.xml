<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2021-08-16T20:20:13Z</date>
    <groups>
        <group>
            <name>Teamcenter Server Components</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template SPLM TC Business Logic Server_J2EE</template>
            <name>Template SPLM TC Business Logic Server_J2EE</name>
            <description>This template is for Teamcenter up to version 12.3</description>
            <groups>
                <group>
                    <name>Teamcenter Server Components</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Business Logic (Teamcenter)</name>
                </application>
                <application>
                    <name>Classes (Java)</name>
                </application>
                <application>
                    <name>Compilation (Java)</name>
                </application>
                <application>
                    <name>CPU (Java)</name>
                </application>
                <application>
                    <name>Garbage collector (Java)</name>
                </application>
                <application>
                    <name>Memory (Java)</name>
                </application>
                <application>
                    <name>Memory pool (Java)</name>
                </application>
                <application>
                    <name>Operating system (Java)</name>
                </application>
                <application>
                    <name>Runtime (Java)</name>
                </application>
                <application>
                    <name>Threads (Java)</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Number of Assigned Servers</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Number of Assigned Servers&quot;]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Teamcenter Server Pool Manager</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>Number of Cold Servers</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Number of Cold Servers&quot;]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Teamcenter Server Pool Manager</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>Number of Servers</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Number of Servers&quot;]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Teamcenter Server Pool Manager</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>Number of Servers Terminated Before Normal Timeout</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Number of Servers Terminated Before Normal Timeout&quot;]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Teamcenter Server Pool Manager</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>Number of Warming Up Servers</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Number of Warming Up Servers&quot;]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Teamcenter Server Pool Manager</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>Number of Warm Servers</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Number of Warm Servers&quot;]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Teamcenter Server Pool Manager</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>Servers in Edit Mode</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Servers in Edit Mode&quot;]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Teamcenter Server Pool Manager</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>Servers in Read Mode</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Servers in Read Mode&quot;]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Teamcenter Server Pool Manager</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>Servers in Stateless Mode</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Servers in Stateless Mode&quot;]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Teamcenter Server Pool Manager</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>Host</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,Host]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Teamcenter Server Pool Manager</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>ColdServers (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=ColdServers&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>A cold server is one that did not report back to the server manager within the configured time period (Default: 5 mins) after being started.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>ColdServers (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=ColdServers&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>A cold server is one that did not report back to the server manager within the configured time period (Default: 5 mins) after being started.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(600s)}&gt;=10</expression>
                            <name>Teamcenter Alert: Cold servers exceeded threshold</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/pool_specific_configuration_tuning</url>
                            <priority>WARNING</priority>
                            <description>Performance problems in loading libraries or accessing the database.&#13;
A tcserver hanging during initialization.&#13;
&#13;
1.Monitor the CPU and memory consumption on the machine.&#13;
2.Look at the syslogs of servers that are detected as cold.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>EditModeTimeouts (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=EditModeTimeouts&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Edit mode timeouts may result in lost user data.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>EditModeTimeouts (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=EditModeTimeouts&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Edit mode timeouts may result in lost user data.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(600s)}&gt;=10</expression>
                            <name>Teamcenter Alert: Edit Mode TimeOuts exceeded threshold</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/pool_specific_configuration_tuning</url>
                            <priority>WARNING</priority>
                            <description>The timeout configuration has produced the indicated number of timed out servers.&#13;
&#13;
1.The timeout period can be configured by running Web Application Manager to update the context parameters and produce a new EAR file for deployment in the web tier application server.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>LoginTime (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=LoginTime&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Average time taken for user to login during recent time period</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>LoginTime (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=LoginTime&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Average time taken for user to login during recent time period</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(600s)}&gt;=60</expression>
                            <name>Teamcenter Alert: Login Time exceeded threshold</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/pool_specific_configuration_tuning</url>
                            <priority>WARNING</priority>
                            <description>High CPU consumption on the machine&#13;
Slow responses from DB&#13;
Trouble getting DB locks&#13;
&#13;
1.Monitor resource consumption in the server pool and the database&#13;
2.Check the syslogs for database errors.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>PoolCapacityTimeouts (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=PoolCapacityTimeouts&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Servers are being terminated by the manager before their normal timeout period due to insufficient capacity in the server pool.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>PoolCapacityTimeouts (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=PoolCapacityTimeouts&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Servers are being terminated by the manager before their normal timeout period due to insufficient capacity in the server pool.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(600s)}&gt;=10</expression>
                            <name>Teamcenter Alert: Pool Capacity Timeouts exceeded threshold</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/pool_specific_configuration_tuning</url>
                            <priority>WARNING</priority>
                            <description>The pool capacity and timeout configurations have produced the indicated number of timed out servers.&#13;
&#13;
1.Decrease PROCESS_WARM so that fewer resources are reserved for new sessions.&#13;
2.Increase PROCESS_MAX to provide more capacity in the server pool (make sure that enough memory is available on the machine for an increased number of servers).&#13;
3.Set shorter timeouts, so that idle servers are removed more quickly.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>QueryTimeouts (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=QueryTimeouts&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>A query time out indicates that a single server request has taken longer than the configured timeout.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>QueryTimeouts (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=QueryTimeouts&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>A query time out indicates that a single server request has taken longer than the configured timeout.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(600s)}&gt;=10</expression>
                            <name>Teamcenter Alert: Query TimeOuts exceeded threshold</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/pool_specific_configuration_tuning</url>
                            <priority>WARNING</priority>
                            <description>Performance issues in the tcserver&#13;
A tcserver hang while processing the request&#13;
A request proceeding normally but requiring more processing time than allowed by the timeout (e.g., a request that produces a huge response or analyzes a large portion of the database)&#13;
&#13;
1.Use the Server Manager interface and the web tier monitoring feature to identify tcservers with long-running requests.&#13;
2.Analyze the use case that causes the query timeout.&#13;
3.Monitor CPU consumption to detect servers that are hung or are completely consuming a CPU.  Collect stack traces for these tcservers.&#13;
4.Dynamically adjust the logging levels for these tcservers to obtain additional information.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ReadModeTimeouts (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=ReadModeTimeouts&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Read mode timeouts may force Rich Client users to restart their client sessions.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>ReadModeTimeouts (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=ReadModeTimeouts&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Read mode timeouts may force Rich Client users to restart their client sessions.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(600s)}&gt;=10</expression>
                            <name>Teamcenter Alert: Read Mode TimeOuts exceeded threshold</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/pool_specific_configuration_tuning</url>
                            <priority>WARNING</priority>
                            <description>The timeout configuration has produced the indicated number of timed out servers.&#13;
&#13;
1.The timeout period can be configured by running Web Application Manager to update the context parameters and produce a new EAR file for deployment in the web tier application server.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ServerManagerGraveEvents (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=ServerManagerGraveEvents&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Something very bad has happened causing the server manager to malfunction.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last()}&gt;=90</expression>
                            <name>Teamcenter Alert: Serious problem with Server Manager</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/pool_specific_configuration_tuning</url>
                            <priority>HIGH</priority>
                            <description>A configuration error or operational failure is preventing the Server Manager from functioning correctly.&#13;
&#13;
1.Look into the problem message and take necessary step to correct the problem, or contact support</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>StatelessModeTimeouts (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=StatelessModeTimeouts&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Stateless mode timeouts generally have low impact on users and are a good way to control resource consumption in the server pool.  However, an excessive rate might lead to high CPU consumption due to continually starting new servers.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>StatelessModeTimeouts (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=StatelessModeTimeouts&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Stateless mode timeouts generally have low impact on users and are a good way to control resource consumption in the server pool.  However, an excessive rate might lead to high CPU consumption due to continually starting new servers.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(600s)}&gt;=10</expression>
                            <name>Teamcenter Alert: Stateless Mode TimeOuts exceeded threshold</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/pool_specific_configuration_tuning</url>
                            <priority>WARNING</priority>
                            <description>The timeout configuration has produced the indicated number of timed out servers.&#13;
&#13;
1.The timeout period can be configured by running Web Application Manager to update the context parameters and produce a new EAR file for deployment in the web tier application server.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>TcServerCrashes (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=TcServerCrashes&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Number of tcservers that have crashed for any reason.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>TcServerCrashes (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=TcServerCrashes&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Number of tcservers that have crashed for any reason.</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(600s)}&gt;=10</expression>
                            <name>Teamcenter Alert: Business Logic Server Crashes exceeded threshold</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/pool_specific_configuration_tuning</url>
                            <priority>WARNING</priority>
                            <description>Teamcenter servers are experiencing internal failures.&#13;
&#13;
1.Gather and analyze the syslogs for the crashed servers.&#13;
2.Gather more information on the use case that causes the tcserver to crash (see the data provided in this notification).&#13;
3.Look for core dumps if available&#13;
4.Re-run the use case with additonal logging turned on for the tcserver involved.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cl Loaded Class Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=ClassLoading&quot;,LoadedClassCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Classes (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>cl Total Loaded Class Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=ClassLoading&quot;,TotalLoadedClassCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Classes (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>cl Unloaded Class Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=ClassLoading&quot;,UnloadedClassCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Classes (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>comp Name of the current JIT compiler</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Compilation&quot;,Name]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>0</trends>
                    <status>DISABLED</status>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Compilation (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{str(Client)}=1</expression>
                            <name>{HOST.NAME} uses suboptimal JIT compiler</name>
                            <priority>INFO</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>comp Accumulated time spent in compilation</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Compilation&quot;,TotalCompilationTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Compilation (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc ConcurrentMarkSweep number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=ConcurrentMarkSweep&quot;,CollectionCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc ConcurrentMarkSweep accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=ConcurrentMarkSweep&quot;,CollectionTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc Copy number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=Copy&quot;,CollectionCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc Copy accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=Copy&quot;,CollectionTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc MarkSweepCompact number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=MarkSweepCompact&quot;,CollectionCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc MarkSweepCompact accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=MarkSweepCompact&quot;,CollectionTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc ParNew number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=ParNew&quot;,CollectionCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc ParNew accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=ParNew&quot;,CollectionTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc PS MarkSweep number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS MarkSweep&quot;,CollectionCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc PS MarkSweep accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS MarkSweep&quot;,CollectionTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc PS Scavenge number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS Scavenge&quot;,CollectionCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc PS Scavenge accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS Scavenge&quot;,CollectionTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Heap Memory committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Heap Memory max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Heap Memory used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Non-Heap Memory committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Non-Heap Memory max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Non-Heap Memory used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Object Pending Finalization Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,ObjectPendingFinalizationCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Old Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Old Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Old Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Perm Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Perm Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Perm Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Code Cache committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Code Cache max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Code Cache used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Perm Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Perm Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Perm Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Old Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Old Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Old Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Perm Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Perm Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Perm Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Tenured Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Tenured Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Tenured Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>os Process Committed Virtual Memory Size</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,CommittedVirtualMemorySize]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>100</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>os Max File Descriptor Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,MaxFileDescriptorCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Operating system (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>os Open File Descriptor Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,OpenFileDescriptorCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Operating system (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>os Process CPU Load</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,ProcessCpuLoad]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>returns the CPU usage of the JVM</description>
                    <applications>
                        <application>
                            <name>CPU (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>100</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}&gt;70</expression>
                            <name>70% os Process CPU Load on {HOST.NAME}</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>os System CPU Load</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,SystemCpuLoad]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>returns the CPU usage of the whole system</description>
                    <applications>
                        <application>
                            <name>CPU (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>100</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>jvm Uptime</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Runtime&quot;,Uptime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>5d</history>
                    <trends>{$TREND}</trends>
                    <units>uptime</units>
                    <applications>
                        <application>
                            <name>Runtime (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{nodata(5m)}=1</expression>
                            <name>{HOST.NAME} is not reachable</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jvm Name</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Runtime&quot;,VmName]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>0</trends>
                    <status>DISABLED</status>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Runtime (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{str(Server)}&lt;&gt;1</expression>
                            <name>{HOST.NAME} runs suboptimal VM type</name>
                            <priority>INFO</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jvm Version</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Runtime&quot;,VmVersion]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>0</trends>
                    <status>DISABLED</status>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Runtime (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>th Daemon Thread Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,DaemonThreadCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <applications>
                        <application>
                            <name>Threads (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>th Peak Thread Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,PeakThreadCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <applications>
                        <application>
                            <name>Threads (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>th Thread Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,ThreadCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <applications>
                        <application>
                            <name>Threads (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>th Total Started Thread Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,TotalStartedThreadCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <applications>
                        <application>
                            <name>Threads (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>Number of mention about &quot;Explain Plan&quot; in logs</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>logrt.count[&quot;C:\\TCLOGS\\tcserver\.([a-zA-Z0-9])+.syslog&quot;,&quot;(Explain Plan)&quot;,,,all,,]</key>
                    <delay>1s</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <description>Check you database, teamcenter has spending a lof of time for get response from database</description>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(1m)}&lt;&gt;0</expression>
                            <name>Teamcenter Alert: Business Logic Server has a problem DBMS performance</name>
                            <url>http://dba-oracle.com/googlesearchsite_proc.htm?cx=000522505899594707971%3A4-ldikxixw4&amp;cof=FORID%3A10&amp;ie=UTF-8&amp;q=Slow+Oracle+SQL&amp;sa=Search&amp;siteurl=www.dba-oracle.com%2Ft_find_slow_oracle_sql.htm&amp;ref=www.google.com%2F&amp;ss=3229j10291705j3</url>
                            <priority>HIGH</priority>
                            <description>1.Check your Teamcenter syslog and the seeking the strings that contained &quot;Explain Plan&quot;&#13;
2.Check your Database</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Number of failed connection TC-DBMS</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>logrt.count[&quot;C:\\TCLOGS\\tcserver\.([a-zA-Z0-9])+.syslog&quot;,&quot;(the DBMS is not online)&quot;,,,all,,]</key>
                    <delay>1s</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(1m)}&lt;&gt;0</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Teamcenter Alert: Business Logic Server can not connect to DBMS</name>
                            <url>https://support.sw.siemens.com/en-US/product/282219420/knowledge-base/PL8009139?pid=sc%3Asearch&amp;pid_context=install%20-ayt&amp;index=content-external&amp;audience=external</url>
                            <priority>DISASTER</priority>
                            <description>Teamcenter business logic cannot connect to DBMS.&#13;
&#13;
1.Check your Teamcenter syslog.&#13;
2.Check your Database and passwod life of infodba user.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Is TC Business Logic (J2EE) avaliable?</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service[{$POOLMGRJMX.SERVICE},,{$POOLMGRJMX.PORT}]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <applications>
                        <application>
                            <name>Business Logic (Teamcenter)</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <triggers>
                        <trigger>
                            <expression>{last(30s)}=0</expression>
                            <name>TC Business Logic (J2EE) is not running</name>
                            <priority>DISASTER</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>TcServer Process State</name>
                    <type>JMX</type>
                    <key>jmx.discovery[attributes,&quot;Administer PoolA servers :id=tcserver*&quot;]</key>
                    <delay>1s</delay>
                    <lifetime>0d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>Assigned User</name>
                            <type>JMX</type>
                            <key>jmx[{#JMXOBJ},&quot;Assigned User&quot;]</key>
                            <delay>1s</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Name of the user the server is assigned to</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>TcServer &quot;{#JMXOBJ}&quot;</name>
                                </application_prototype>
                            </application_prototypes>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                        </item_prototype>
                        <item_prototype>
                            <name>Last Message Number</name>
                            <type>JMX</type>
                            <key>jmx[{#JMXOBJ},&quot;Last Message Number&quot;]</key>
                            <delay>1s</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Sequence numer of the last message received from the server</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>TcServer &quot;{#JMXOBJ}&quot;</name>
                                </application_prototype>
                            </application_prototypes>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                        </item_prototype>
                        <item_prototype>
                            <name>Last Message Time</name>
                            <type>JMX</type>
                            <key>jmx[{#JMXOBJ},&quot;Last Message Time&quot;]</key>
                            <delay>1s</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Time when the last message from the server was sent</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>TcServer &quot;{#JMXOBJ}&quot;</name>
                                </application_prototype>
                            </application_prototypes>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                        </item_prototype>
                        <item_prototype>
                            <name>Process ID</name>
                            <type>JMX</type>
                            <key>jmx[{#JMXOBJ},&quot;Process ID&quot;]</key>
                            <delay>1s</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>The process ID of this server process</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>TcServer &quot;{#JMXOBJ}&quot;</name>
                                </application_prototype>
                            </application_prototypes>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                        </item_prototype>
                        <item_prototype>
                            <name>Server ID</name>
                            <type>JMX</type>
                            <key>jmx[{#JMXOBJ},&quot;Server ID&quot;]</key>
                            <delay>1s</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>The unique identifier of the server</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>TcServer &quot;{#JMXOBJ}&quot;</name>
                                </application_prototype>
                            </application_prototypes>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                        </item_prototype>
                        <item_prototype>
                            <name>Abandoned</name>
                            <type>JMX</type>
                            <key>jmx[{#JMXOBJ},Abandoned]</key>
                            <delay>1s</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Indicates whether the server was abandoned after a few unsuccessful attempts to connect to it</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>TcServer &quot;{#JMXOBJ}&quot;</name>
                                </application_prototype>
                            </application_prototypes>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                        </item_prototype>
                        <item_prototype>
                            <name>Active</name>
                            <type>JMX</type>
                            <key>jmx[{#JMXOBJ},Active]</key>
                            <delay>1s</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Indicates whether the server is processing a request</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>TcServer &quot;{#JMXOBJ}&quot;</name>
                                </application_prototype>
                            </application_prototypes>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                        </item_prototype>
                        <item_prototype>
                            <name>Assigned</name>
                            <type>JMX</type>
                            <key>jmx[{#JMXOBJ},Assigned]</key>
                            <delay>1s</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Indicates whether the server is assigned to a user</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>TcServer &quot;{#JMXOBJ}&quot;</name>
                                </application_prototype>
                            </application_prototypes>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                        </item_prototype>
                        <item_prototype>
                            <name>Provisional</name>
                            <type>JMX</type>
                            <key>jmx[{#JMXOBJ},Provisional]</key>
                            <delay>1s</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Indicates whether the server is provisionally assigned to a user, but the assignment has not completed</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>TcServer &quot;{#JMXOBJ}&quot;</name>
                                </application_prototype>
                            </application_prototypes>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                        </item_prototype>
                        <item_prototype>
                            <name>Ready</name>
                            <type>JMX</type>
                            <key>jmx[{#JMXOBJ},Ready]</key>
                            <delay>1s</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Indicates whether the server is ready to be assigned</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>TcServer &quot;{#JMXOBJ}&quot;</name>
                                </application_prototype>
                            </application_prototypes>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                        </item_prototype>
                        <item_prototype>
                            <name>Remove</name>
                            <type>JMX</type>
                            <key>jmx[{#JMXOBJ},Remove]</key>
                            <delay>1s</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Indicates whether the manager is attempting to remove the server</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>TcServer &quot;{#JMXOBJ}&quot;</name>
                                </application_prototype>
                            </application_prototypes>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                        </item_prototype>
                        <item_prototype>
                            <name>State</name>
                            <type>JMX</type>
                            <key>jmx[{#JMXOBJ},State]</key>
                            <delay>1s</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>Indicate whether the server is stateless or in read or edit mode</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>TcServer &quot;{#JMXOBJ}&quot;</name>
                                </application_prototype>
                            </application_prototypes>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                        </item_prototype>
                    </item_prototypes>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$HISTORY}</macro>
                    <value>30d</value>
                </macro>
                <macro>
                    <macro>{$MAXPROCESS}</macro>
                    <value>30</value>
                    <description>Could you please to check PROCESS_MAX property in serverPool.properties</description>
                </macro>
                <macro>
                    <macro>{$POOLID}</macro>
                    <value>PoolA</value>
                    <description>Could you please to check POOL_ID property  from serverPool.properties</description>
                </macro>
                <macro>
                    <macro>{$POOLMGRJMX.PORT}</macro>
                    <value>9030</value>
                    <description>jmx port of target server</description>
                </macro>
                <macro>
                    <macro>{$POOLMGRJMX.SERVICE}</macro>
                    <value>http</value>
                    <description>The service (http/https/etc) for port check. See &quot;net.tcp.service&quot; documentation page for more information: https://www.zabbix.com/documentation/current/ru/manual/config/items/itemtypes/simple_checks</description>
                </macro>
                <macro>
                    <macro>{$TREND}</macro>
                    <value>365d</value>
                </macro>
                <macro>
                    <macro>{$UPDATE}</macro>
                    <value>1m</value>
                </macro>
            </macros>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.used].last(0)}&gt;({Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.max].last(0)}*0.7)</expression>
            <name>70% mem Heap Memory used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.used].last(0)}&gt;({Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.max].last(0)}*0.7)</expression>
            <name>70% mem Non-Heap Memory used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.used].last(0)}&gt;({Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp CMS Old Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.used].last(0)}&gt;({Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp CMS Perm Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.used].last(0)}&gt;({Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp Code Cache used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.used].last(0)}&gt;({Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp Perm Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.used].last(0)}&gt;({Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp PS Old Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.used].last(0)}&gt;({Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp PS Perm Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.used].last(0)}&gt;({Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp Tenured Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=OperatingSystem&quot;,OpenFileDescriptorCount].last(0)}&gt;({Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=OperatingSystem&quot;,MaxFileDescriptorCount].last(0)}*0.7)</expression>
            <name>70% os Opened File Descriptor Count used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=GarbageCollector,name=ParNew&quot;,CollectionCount].last(0)}&lt;{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=GarbageCollector,name=ConcurrentMarkSweep&quot;,CollectionCount].last(0)}</expression>
            <name>gc Concurrent Mark Sweep in fire fighting mode on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=GarbageCollector,name=Copy&quot;,CollectionCount].last(0)}&lt;{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=GarbageCollector,name=MarkSweepCompact&quot;,CollectionCount].last(0)}</expression>
            <name>gc Mark Sweep Compact in fire fighting mode on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=GarbageCollector,name=PS Scavenge&quot;,CollectionCount].last(0)}&lt;{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=GarbageCollector,name=PS MarkSweep&quot;,CollectionCount].last(0)}</expression>
            <name>gc PS Mark Sweep in fire fighting mode on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.committed].last(0)}={Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.max].last(0)}</expression>
            <name>mem Heap Memory fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.committed].last(0)}={Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.max].last(0)}</expression>
            <name>mem Non-Heap Memory fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.committed].last(0)}={Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp CMS Old Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.committed].last(0)}={Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp CMS Perm Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.committed].last(0)}={Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.max].last(0)}</expression>
            <name>mp Code Cache fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.committed].last(0)}={Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp Perm Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.committed].last(0)}={Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp PS Old Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.committed].last(0)}={Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp PS Perm Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.committed].last(0)}={Template SPLM TC Business Logic Server_J2EE:jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp Tenured Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <name>CPU (J2EE)</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,ProcessCpuLoad]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,SystemCpuLoad]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Heap Memory Usage (J2EE)</name>
            <show_triggers>NO</show_triggers>
            <type>STACKED</type>
            <graph_items>
                <graph_item>
                    <color>A54F10</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.used]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>80FF00</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.max]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.committed]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Teamcenter Information</name>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>1A7C11</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=ColdServers&quot;,Recent_Stats]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Number of Assigned Servers&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Number of Servers&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>A54F10</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Number of Warm Servers&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>FC6EA3</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=ReadModeTimeouts&quot;,Recent_Stats]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <color>6C59DC</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Servers in Edit Mode&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <color>AC8C14</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;Administer {$POOLID} manager :id={$POOLID}&quot;,&quot;Servers in Read Mode&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>8</sortorder>
                    <color>611F27</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;Administer {$POOLID} manager monitoring:id=TcServerCrashes&quot;,Recent_Stats]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Threads (J2EE)</name>
            <type>STACKED</type>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;java.lang:type=Threading&quot;,PeakThreadCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;java.lang:type=Threading&quot;,DaemonThreadCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>Template SPLM TC Business Logic Server_J2EE</host>
                        <key>jmx[&quot;java.lang:type=Threading&quot;,ThreadCount]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
    <value_maps>
        <value_map>
            <name>Service state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Down</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Up</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
