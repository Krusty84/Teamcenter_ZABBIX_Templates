<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2021-08-16T20:20:46Z</date>
    <groups>
        <group>
            <name>Teamcenter Server Components</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template SPLM TC FSC Server</template>
            <name>Template SPLM TC FSC Server</name>
            <groups>
                <group>
                    <name>Teamcenter Server Components</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Classes (Java)</name>
                </application>
                <application>
                    <name>Compilation (Java)</name>
                </application>
                <application>
                    <name>CPU (Java)</name>
                </application>
                <application>
                    <name>FSC (Teamcenter)</name>
                </application>
                <application>
                    <name>Garbage collector (Java)</name>
                </application>
                <application>
                    <name>Memory (Java)</name>
                </application>
                <application>
                    <name>Memory pool (Java)</name>
                </application>
                <application>
                    <name>Operating system (Java)</name>
                </application>
                <application>
                    <name>Runtime (Java)</name>
                </application>
                <application>
                    <name>Storage Information</name>
                </application>
                <application>
                    <name>Threads (Java)</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Number Of Failed Opening Files</name>
                    <type>JMX</type>
                    <key>jmx[&quot;com.teamcenter.mld:units=mSec,name=LocalReadWholeFile-FMSWebHandlerRoot,type=Collector,SRC=com.teamcenter.fms.servercache.FMSWebHandlerRoot&quot;,NumFailures]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>The number of failed transactions.</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last()}&gt;0</expression>
                            <name>File Management System Alert: Your users has a problem with opening files from Teamcenter</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>HIGH</priority>
                            <description>Your users has a problem with opening files from Teamcenter&#13;
&#13;
1.Check FSC services&#13;
2.Check FCC component&#13;
2.Check volume consistent</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Number Of Failed Writing Files</name>
                    <type>JMX</type>
                    <key>jmx[&quot;com.teamcenter.mld:units=mSec,name=LocalWrite-FMSWebHandlerRoot,type=Collector,SRC=com.teamcenter.fms.servercache.FMSWebHandlerRoot&quot;,NumFailures]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>The number of failed transactions.</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last()}&gt;0</expression>
                            <name>File Management System Alert: Your users has a problem with wriing files to Teamcenter</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>HIGH</priority>
                            <description>Your users has a problem with opening files from Teamcenter&#13;
&#13;
1.Check FSC services&#13;
2.Check FCC component&#13;
2.Check available space of volume</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>AllRoutesFailed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=AllRoutesFailed&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>All Routes to resources in FMS Network topology is down. Something very bad has happened causing the FSC process to malfunction</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last()}&gt;0</expression>
                            <name>File Management System Alert: All Routes in FMS Network topology is down</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>HIGH</priority>
                            <description>The FSC Server process serving the resource might have stopped running.&#13;
&#13;
1.Look up the FSCMonitoring.log for additional information on all routes down error.&#13;
2.Ensure failed routes are available and restart the FSC process. If problem persists contact support</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ClientClosedConnection (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=ClientClosedConnection&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Client has prematurely closed the connection with FSC Server while data was being transferred.</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>ClientClosedConnection (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=ClientClosedConnection&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Client has prematurely closed the connection with FSC Server while data was being transferred.</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>ExpiredTicket (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=ExpiredTicket&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>FSC Server encountered a expired ticket</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>ExpiredTicket (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=ExpiredTicket&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>FSC Server encountered a expired ticket</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(6000s)}&gt;=2</expression>
                            <name>File Management System Alert: FSC Server encountered a expired ticket</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>HIGH</priority>
                            <description>Client is using an expired ticket to obtain the resources from the FSC Server.&#13;
&#13;
1.Verify the system clock and time zone factors of the client where the ticket was originated.&#13;
2.Verify the preference value of ticket expiration interval.&#13;
3.Tune the above factors if needed and regenerate the ticket.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>GenericError (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=GenericError&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>A general error was thrown from FSC Server</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>GenericError (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=GenericError&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>A general error was thrown from FSC Server</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(6000s)}&gt;=10</expression>
                            <name>File Management System Alert: A general error was thrown from FSC Server</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>HIGH</priority>
                            <description>The FSC Server process serving the resource is unstable due to recent configuration changes.&#13;
&#13;
1.Look up the FSC log for additional information on the generic error.&#13;
2.Take action to correct the issue. If the error persist contact the support with error details.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>InvalidTicket (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=InvalidTicket&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>FSC Server encountered a invalid ticket</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>InvalidTicket (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=InvalidTicket&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>FSC Server encountered a invalid ticket</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{min(6000s)}&gt;=1</expression>
                            <name>File Management System Alert: FSC Server encountered a invalid ticket</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>HIGH</priority>
                            <description>Client is using an invalid ticket to obtain the resources from the FSC Server.&#13;
&#13;
1.Ensure that the invalid ticket is generated from a legitimate source.&#13;
2.Ensure that encryption keys stored in database match with keys stored with FMS.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>MemoryCollection (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=MemoryCollection&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Java virtual machine detects that the memory usage of a memory pool is exceeding collection usage threshold</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>MemoryCollection (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=MemoryCollection&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Java virtual machine detects that the memory usage of a memory pool is exceeding collection usage threshold</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(6000s)}&gt;=1</expression>
                            <name>File Management System Alert:Memory Collection Threshold Exceeded</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>WARNING</priority>
                            <description>The FSC Server process is operating at maximum memory capacity.&#13;
&#13;
1.Edit startfsc script and increase the value of FSC_MEM.&#13;
2.Restart the FSC and ensure that there are no errors.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>MemoryUsage (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=MemoryUsage&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Java virtual machine detects that the memory usage of a memory pool is exceeding usage threshold.</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>MemoryUsage (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=MemoryUsage&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Java virtual machine detects that the memory usage of a memory pool is exceeding usage threshold.</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(6000s)}&gt;=1</expression>
                            <name>File Management System Alert:Memory Usage Threshold Exceeded</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>WARNING</priority>
                            <description>The FSC Server process is operating at maximum memory capacity.&#13;
&#13;
1.Edit startfsc script and increase the value of FSC_MEM.&#13;
2.Restart the FSC and ensure that there are no errors.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>NoRouteError (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=NoRouteError&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Client or FCC is connected to wrong FSC Server process.</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>NoRouteError (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=NoRouteError&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Client or FCC is connected to wrong FSC Server process.</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(6000s)}&gt;=2</expression>
                            <name>File Management System Alert: Client is attempting to connect to a wrong FSC process.</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>HIGH</priority>
                            <description>The Client might have established the connection with an old FCC process.&#13;
&#13;
1.Check the fcc.log for errors.&#13;
2.Verify the Client or FCC configuration files and restart the FCC process.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>PeriodicChecks (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=PeriodicChecks&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Periodic FSC Server health checks has detected an issue</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>PeriodicChecks (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=PeriodicChecks&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>Periodic FSC Server health checks has detected an issue</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(6000s)}&gt;=2</expression>
                            <name>File Management System Alert: Periodic FSC Server health checks detected an issue</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>HIGH</priority>
                            <description>Periodic FSC network, local volume, performance and configuration checks has detected an issue.&#13;
&#13;
1.Look up the FSCMonitoring.log for additional information on the PeriodicChecks event.&#13;
2.Take action to correct the issue. If the error persist contact the support with error details.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>QuarantinedDeadLink (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=QuarantinedDeadLink&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>A link between two resources in FSC network topology was quarnatined</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>QuarantinedDeadLink (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=QuarantinedDeadLink&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>A link between two resources in FSC network topology was quarnatined</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>RemoteAdminNotSupported (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=RemoteAdminNotSupported&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>The Fms_BootStrap_Urls value is incorrect</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>RemoteAdminNotSupported (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=RemoteAdminNotSupported&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>The Fms_BootStrap_Urls value is incorrect</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(6000s)}&gt;=2</expression>
                            <name>File Management System Alert: TcServer or Teamcenter process is attempting to connect to a wrong FSC process.</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>HIGH</priority>
                            <description>The value of the preference Fms_BootStrap_Urls is incorrect.&#13;
&#13;
1.Check the tcserver.syslog or teamcenter process.syslog for Fms_BootStrap_Urls value.&#13;
2.Correct the Fms_BootStrap_Urls varaible to proper host:port where FSC is running.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>TimeOutError (Historical_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=TimeOutError&quot;,Historical_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>FSC Server has encountered a time out issue</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>TimeOutError (Recent_Stats)</name>
                    <type>JMX</type>
                    <key>jmx[&quot;FSC_Critical_Events:id=TimeOutError&quot;,Recent_Stats]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <description>FSC Server has encountered a time out issue</description>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{min(6000s)}&gt;=2</expression>
                            <name>File Management System Alert: A link between two resources in FSC network toplogy was quarnatined</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>HIGH</priority>
                            <description>The resource is offline or the network route to the resource via FSC has some issues.&#13;
&#13;
1.Look up the FSCMonitoring.log for additional information on the quarantined link.&#13;
2.Ensure that the link is alive and restart the FSC Process.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{last(6000s)}&gt;=2</expression>
                            <name>File Management System Alert: Client has prematurely closed the connection with FSC Server while data was being transferred.</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>HIGH</priority>
                            <description>The client application might have inadvertently terminated or have purposely interrupted the data transfer to FSC Server.&#13;
&#13;
1.Take remedial steps to correct the issue.If the error persists contact the support with error details.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{last(6000s)}&gt;=2</expression>
                            <name>File Management System Alert: FSC Server has encountered a time out issue</name>
                            <url>https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20190708094221054.plm00102/html/c25a0001</url>
                            <priority>HIGH</priority>
                            <description>Time out errors occur due to variety of reasons including aged hardware/network components,low bandwidth and high latency, slow or non-responsive socket connections etc.&#13;
&#13;
1.Try setting fsc default FSCDEFAULTS_MAXIMUMTHREADIDLETIMEMS and restart the computer and FSC process.&#13;
2.Upgrade the hardware and network components.If the error persists contact the support with error details.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cl Loaded Class Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=ClassLoading&quot;,LoadedClassCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Classes (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>cl Total Loaded Class Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=ClassLoading&quot;,TotalLoadedClassCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Classes (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>cl Unloaded Class Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=ClassLoading&quot;,UnloadedClassCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Classes (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>comp Name of the current JIT compiler</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Compilation&quot;,Name]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>0</trends>
                    <status>DISABLED</status>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Compilation (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{str(Client)}=1</expression>
                            <name>{HOST.NAME} uses suboptimal JIT compiler</name>
                            <priority>INFO</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>comp Accumulated time spent in compilation</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Compilation&quot;,TotalCompilationTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Compilation (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc ConcurrentMarkSweep number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=ConcurrentMarkSweep&quot;,CollectionCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc ConcurrentMarkSweep accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=ConcurrentMarkSweep&quot;,CollectionTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc Copy number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=Copy&quot;,CollectionCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc Copy accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=Copy&quot;,CollectionTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc MarkSweepCompact number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=MarkSweepCompact&quot;,CollectionCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc MarkSweepCompact accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=MarkSweepCompact&quot;,CollectionTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc ParNew number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=ParNew&quot;,CollectionCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc ParNew accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=ParNew&quot;,CollectionTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc PS MarkSweep number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS MarkSweep&quot;,CollectionCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc PS MarkSweep accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS MarkSweep&quot;,CollectionTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc PS Scavenge number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS Scavenge&quot;,CollectionCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc PS Scavenge accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS Scavenge&quot;,CollectionTime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Heap Memory committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Heap Memory max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Heap Memory used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Non-Heap Memory committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Non-Heap Memory max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Non-Heap Memory used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Object Pending Finalization Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,ObjectPendingFinalizationCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Old Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Old Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Old Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Perm Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Perm Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Perm Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Code Cache committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Code Cache max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Code Cache used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Perm Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Perm Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Perm Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Old Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Old Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Old Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Perm Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Perm Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Perm Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Tenured Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.committed]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Tenured Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.max]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Tenured Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.used]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>os Process Committed Virtual Memory Size</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,CommittedVirtualMemorySize]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Memory (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>100</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>os Max File Descriptor Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,MaxFileDescriptorCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Operating system (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>os Open File Descriptor Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,OpenFileDescriptorCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <applications>
                        <application>
                            <name>Operating system (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>os Process CPU Load</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,ProcessCpuLoad]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>returns the CPU usage of the JVM</description>
                    <applications>
                        <application>
                            <name>CPU (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>100</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}&gt;70</expression>
                            <name>70% os Process CPU Load on {HOST.NAME}</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>os System CPU Load</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,SystemCpuLoad]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>returns the CPU usage of the whole system</description>
                    <applications>
                        <application>
                            <name>CPU (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>100</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>jvm Uptime</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Runtime&quot;,Uptime]</key>
                    <delay>{$UPDATE}</delay>
                    <history>5d</history>
                    <trends>{$TREND}</trends>
                    <units>uptime</units>
                    <applications>
                        <application>
                            <name>Runtime (Java)</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{nodata(5m)}=1</expression>
                            <name>{HOST.NAME} is not reachable</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jvm Name</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Runtime&quot;,VmName]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>0</trends>
                    <status>DISABLED</status>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Runtime (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{str(Server)}&lt;&gt;1</expression>
                            <name>{HOST.NAME} runs suboptimal VM type</name>
                            <priority>INFO</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jvm Version</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Runtime&quot;,VmVersion]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>0</trends>
                    <status>DISABLED</status>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Runtime (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>th Daemon Thread Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,DaemonThreadCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <applications>
                        <application>
                            <name>Threads (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>th Peak Thread Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,PeakThreadCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <applications>
                        <application>
                            <name>Threads (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>th Thread Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,ThreadCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <applications>
                        <application>
                            <name>Threads (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>th Total Started Thread Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,TotalStartedThreadCount]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <applications>
                        <application>
                            <name>Threads (Java)</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>Is FSC avaliable?</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service[{$FSC.SERVICE},,{$FSC.PORT}]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <applications>
                        <application>
                            <name>FSC (Teamcenter)</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <triggers>
                        <trigger>
                            <expression>{last(30s)}=0</expression>
                            <name>TC FSC is not running</name>
                            <priority>HIGH</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Current Size of Volume - VOL_SYS</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>vfs.dir.size[c:\siemens\vol_sys]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <description>tech.notes. zabbix agent should have access to monitoring folder!</description>
                    <applications>
                        <application>
                            <name>Storage Information</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Free Space of Disk C</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>vfs.fs.size[C:,free]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Storage Information</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last()}&lt;={$STORAGELEVEL.DANGER}</expression>
                            <name>The volume on {HOST.NAME} is  full!</name>
                            <priority>DISASTER</priority>
                            <description>You should check you storage with Teamcenter volumes!</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{last(20m)}&lt;={$STORAGELEVEL.WARNING}</expression>
                            <name>The volume on {HOST.NAME} is partially full!</name>
                            <priority>AVERAGE</priority>
                            <description>You should check you storage with Teamcenter volumes!</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Total Space of Disk C</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>vfs.fs.size[C:,total]</key>
                    <delay>{$UPDATE}</delay>
                    <history>{$HISTORY}</history>
                    <trends>{$TREND}</trends>
                    <status>DISABLED</status>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Storage Information</name>
                        </application>
                    </applications>
                </item>
            </items>
            <macros>
                <macro>
                    <macro>{$FSC.PORT}</macro>
                    <value>4544</value>
                    <description>FSC listening port</description>
                </macro>
                <macro>
                    <macro>{$FSC.SERVICE}</macro>
                    <value>http</value>
                    <description>The service (http/https/etc) for port check. See &quot;net.tcp.service&quot; documentation page for more information: https://www.zabbix.com/documentation/current/ru/manual/config/items/itemtypes/simple_checks</description>
                </macro>
                <macro>
                    <macro>{$HISTORY}</macro>
                    <value>30d</value>
                </macro>
                <macro>
                    <macro>{$STORAGELEVEL.DANGER}</macro>
                    <value>10G</value>
                </macro>
                <macro>
                    <macro>{$STORAGELEVEL.WARNING}</macro>
                    <value>100G</value>
                </macro>
                <macro>
                    <macro>{$TREND}</macro>
                    <value>365d</value>
                </macro>
                <macro>
                    <macro>{$UPDATE}</macro>
                    <value>1m</value>
                </macro>
            </macros>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.used].last(0)}&gt;({Template SPLM TC FSC Server:jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.max].last(0)}*0.7)</expression>
            <name>70% mem Heap Memory used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.used].last(0)}&gt;({Template SPLM TC FSC Server:jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.max].last(0)}*0.7)</expression>
            <name>70% mem Non-Heap Memory used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.used].last(0)}&gt;({Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp CMS Old Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.used].last(0)}&gt;({Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp CMS Perm Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.used].last(0)}&gt;({Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp Code Cache used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.used].last(0)}&gt;({Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp Perm Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.used].last(0)}&gt;({Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp PS Old Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.used].last(0)}&gt;({Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp PS Perm Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.used].last(0)}&gt;({Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp Tenured Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=OperatingSystem&quot;,OpenFileDescriptorCount].last(0)}&gt;({Template SPLM TC FSC Server:jmx[&quot;java.lang:type=OperatingSystem&quot;,MaxFileDescriptorCount].last(0)}*0.7)</expression>
            <name>70% os Opened File Descriptor Count used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=GarbageCollector,name=ParNew&quot;,CollectionCount].last(0)}&lt;{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=GarbageCollector,name=ConcurrentMarkSweep&quot;,CollectionCount].last(0)}</expression>
            <name>gc Concurrent Mark Sweep in fire fighting mode on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=GarbageCollector,name=Copy&quot;,CollectionCount].last(0)}&lt;{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=GarbageCollector,name=MarkSweepCompact&quot;,CollectionCount].last(0)}</expression>
            <name>gc Mark Sweep Compact in fire fighting mode on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=GarbageCollector,name=PS Scavenge&quot;,CollectionCount].last(0)}&lt;{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=GarbageCollector,name=PS MarkSweep&quot;,CollectionCount].last(0)}</expression>
            <name>gc PS Mark Sweep in fire fighting mode on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.committed].last(0)}={Template SPLM TC FSC Server:jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.max].last(0)}</expression>
            <name>mem Heap Memory fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.committed].last(0)}={Template SPLM TC FSC Server:jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.max].last(0)}</expression>
            <name>mem Non-Heap Memory fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.committed].last(0)}={Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp CMS Old Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.committed].last(0)}={Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp CMS Perm Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.committed].last(0)}={Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.max].last(0)}</expression>
            <name>mp Code Cache fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.committed].last(0)}={Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp Perm Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.committed].last(0)}={Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp PS Old Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.committed].last(0)}={Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp PS Perm Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.committed].last(0)}={Template SPLM TC FSC Server:jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp Tenured Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <name>CPU (J2EE)</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>Template SPLM TC FSC Server</host>
                        <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,ProcessCpuLoad]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template SPLM TC FSC Server</host>
                        <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,SystemCpuLoad]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Heap Memory Usage (J2EE)</name>
            <show_triggers>NO</show_triggers>
            <type>STACKED</type>
            <graph_items>
                <graph_item>
                    <color>A54F10</color>
                    <item>
                        <host>Template SPLM TC FSC Server</host>
                        <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.used]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>80FF00</color>
                    <item>
                        <host>Template SPLM TC FSC Server</host>
                        <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.max]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template SPLM TC FSC Server</host>
                        <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.committed]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Threads (J2EE)</name>
            <type>STACKED</type>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>Template SPLM TC FSC Server</host>
                        <key>jmx[&quot;java.lang:type=Threading&quot;,PeakThreadCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template SPLM TC FSC Server</host>
                        <key>jmx[&quot;java.lang:type=Threading&quot;,DaemonThreadCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>Template SPLM TC FSC Server</host>
                        <key>jmx[&quot;java.lang:type=Threading&quot;,ThreadCount]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
    <value_maps>
        <value_map>
            <name>Service state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Down</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Up</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
